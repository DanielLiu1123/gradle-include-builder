"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[616],{8268:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=n(7624),r=n(2172);const i={sidebar_position:50},a="Configuration Options",s={id:"configuration",title:"Configuration Options",description:"This is all the configuration options that can be used in the include-builder.yaml file.",source:"@site/docs/50-configuration.mdx",sourceDirName:".",slug:"/configuration",permalink:"/gradle-include-builder/docs/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/DanielLiu1123/gradle-include-builder/tree/main/website/docs/50-configuration.mdx",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"tutorialSidebar",previous:{title:"Jar File",permalink:"/gradle-include-builder/docs/project-types/jar"}},c={},l=[];function h(t){const e={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.M)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,o.jsxs)(e.p,{children:["This is all the configuration options that can be used in the ",(0,o.jsx)(e.code,{children:"include-builder.yaml"})," file."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="include-builder.yaml"',children:"branchMappingDir: .branch-mappings  # Directory to store branch mappings, default is '.branch-mappings'\ntrySameBranch: true                 # Whether to try to use the same branch as the project, default is false (global setting)\nprojects:\n  - id: httpexchange-spring-boot-starter                                     # Optional\n    git:                                                                     # Mark this project is a git repository, only one of git, dir, jar can be used\n      url: https://github.com/DanielLiu1123/httpexchange-spring-boot-starter # Git repository URL\n      branch: main                                                           # Branch to use\n      path: third-party/httpexchange-spring-boot-starter                     # Download path, can be absolute path or relative to the root project\n      buildPath: .                                                           # Build path, default is '.', which means the root of the project\n      extraArgs: --depth 1 --single-branch                                   # Optional, used for git clone if the path does not exist\n      trySameBranch: true                                                    # Whether to try to use the same branch as the project, use the global setting if not set\n  - dir:                              # Mark this project is a directory, only one of git, dir, jar can be used\n      path: ../another-gradle-project # Directory path, can be absolute path or relative to the root project\n      buildPath: .                    # Build path, default is '.', which means the root of the project\n  - jar:                                                                                        # Mark this project is a jar file, only one of git, dir, jar can be used\n      url: https://repo1.maven.org/maven2/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar      # Download file URL\n      path: libs/gson.jar                                                                       # Download file path, can be absolute path or relative to the root project\n      downloadPolicy: IF_NOT_PRESENT                                                            # ALWAYS, IF_NOT_PRESENT (default), NEVER\n"})})]})}function d(t={}){const{wrapper:e}={...(0,r.M)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(h,{...t})}):h(t)}},2172:(t,e,n)=>{n.d(e,{I:()=>s,M:()=>a});var o=n(1504);const r={},i=o.createContext(r);function a(t){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:a(t.components),o.createElement(i.Provider,{value:e},t.children)}}}]);