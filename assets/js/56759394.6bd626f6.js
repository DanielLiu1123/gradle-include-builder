"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[932],{3228:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>a});var t=i(7624),s=i(2172);const o={sidebar_position:1},r="Introduction",d={id:"intro",title:"Introduction",description:"Gradle Include Builder is a script that aims to use source code of the dependencies to build gradle project,",source:"@site/docs/01-intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/gradle-include-builder/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/DanielLiu1123/gradle-include-builder/tree/main/website/docs/01-intro.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Quick Start",permalink:"/gradle-include-builder/docs/quick-start"}},c={},a=[{value:"Challenges of Jar Dependencies",id:"challenges-of-jar-dependencies",level:2},{value:"Source Code Dependencies",id:"source-code-dependencies",level:2},{value:"Limitations",id:"limitations",level:2}];function l(e){const n={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"Gradle Include Builder is a script that aims to use source code of the dependencies to build gradle project,\nkeep the code always updated, and make customization and extension easier."}),"\n",(0,t.jsx)(n.h2,{id:"challenges-of-jar-dependencies",children:"Challenges of Jar Dependencies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Setting up and maintaining a private repository"}),"\n",(0,t.jsx)(n.p,{children:"This is time-consuming and requires extra costs and expertise.\nManaging the stability and security of a private repository adds complexity to the project,\nand any disruption can affect dependency management and the build process."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Updates are not timely"}),"\n",(0,t.jsx)(n.p,{children:"Relying on jar files means waiting for the library author to release a new version.\nThis can cause unnecessary delays for urgent bug fixes or security updates."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Difficult to debug and troubleshoot"}),"\n",(0,t.jsx)(n.p,{children:"Without the source code, it becomes harder to understand and debug issues in the dependency library.\nEven with source code, you cannot make direct modifications in the project,\nlimiting your ability to quickly resolve issues."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Inconvenient to customize and extend"}),"\n",(0,t.jsx)(n.p,{children:"When you need to customize or extend library functions, starting from the source\ncode to compile and manage your own version is troublesome and prone to errors.\nMerging these changes with library updates is even more challenging."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In enterprise projects, we often divide our code into several independently functional modules.\nRelying on traditional jar dependencies makes it extremely difficult to ensure these modules' code is always up-to-date.\nOnce a dependent module encounters an issue, quick fixes become even more challenging since directly modifying\nthe source code of dependencies is very difficult."}),"\n",(0,t.jsx)(n.h2,{id:"source-code-dependencies",children:"Source Code Dependencies"}),"\n",(0,t.jsx)(n.p,{children:"Imagine a scenario where our dependencies are directly on source code, not jar files.\nWhat significant advantages could we gain?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Enhanced Extensibility and Customization"}),"\n",(0,t.jsx)(n.p,{children:"Direct access to the source code provides unparalleled flexibility for the project,\nmaking it straightforward to extend functionalities and customize features."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Rapid Issue Resolution"}),"\n",(0,t.jsx)(n.p,{children:"Being able to immediately access and modify the source code greatly reduces the time for diagnosing and solving problems."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Instant Updates"}),"\n",(0,t.jsx)(n.p,{children:"Relying on source code means any modifications or updates to the libraries can be reflected in the project instantly,\nensuring the project is always up-to-date."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,t.jsxs)(n.p,{children:["The primary challenge of using source code dependencies is the increased build time,\nas dependencies are based on .java files instead of .class files,\nmeaning the source code of the dependencies must be compiled.\nTherefore, it may not be a good choice to use source code dependencies for large projects like ",(0,t.jsx)(n.a,{href:"https://github.com/spring-projects/spring-framework",children:"Spring"}),",\nas their build and compilation time could significantly increase."]}),"\n",(0,t.jsx)(n.p,{children:"However, if your team is utilizing Gradle and managing multiple modules or repositories,\nconsidering a source code dependency approach is advisable.\nThis method can significantly enhance the efficiency of code iterations,\nespecially during development and testing phases, allowing immediate visibility of changes."})]})}function u(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},2172:(e,n,i)=>{i.d(n,{I:()=>d,M:()=>r});var t=i(1504);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);